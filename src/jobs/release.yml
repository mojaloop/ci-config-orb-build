description: >
  This job publishes a release to GitHub.
executor:
  name: docker
  resource_class: << parameters.resource_class >>
environment:
  MAIN_BRANCH_NAME: main
parameters:
  yarn_lock:
    type: string
    default: ''
  slack:
    type: string
    default: ''
  resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
steps:
  - docker_dependencies
  - checkout
  - restore_cache_command:
      yarn_lock: << parameters.yarn_lock >>
  - configure_git
  - run:
      name: Setup Slack config
      command: |
        echo "export SLACK_PROJECT_NAME=${CIRCLE_PROJECT_REPONAME}" >> $BASH_ENV
        echo "export SLACK_RELEASE_TYPE='GitHub Release'" >> $BASH_ENV
        echo "export SLACK_RELEASE_TAG='${RELEASE_TAG} on ${CIRCLE_BRANCH} branch'" >> $BASH_ENV
        echo "export SLACK_BUILD_ID=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
        echo "export SLACK_CI_URL=${CIRCLE_BUILD_URL}" >> $BASH_ENV
  - run:
      name: Generate SBOM
      command: |
        if ls | grep -Eq '^sbom-*.csv$'; then
          echo "Found SBOM file"
          git rm sbom-*.csv 2>/dev/null || true
          rm -f sbom-*.csv
          # Generate new SBOM
          if [ -f yarn.lock ]; then
            echo "Detected yarn.lock, generating SBOM using Yarn"
            npx -y --package @mojaloop/ml-depcheck-utility@1.1.0 generate-sbom-yarn "v${RELEASE_TAG}" --yes
          else
            echo "No yarn.lock found, generating SBOM using NPM"
            npx -y --package @mojaloop/ml-depcheck-utility@1.1.0 generate-sbom-npm "v${RELEASE_TAG}" --yes
          fi
          # Get the new sbom filename
          sbom_file=$(ls sbom-*.csv 2>/dev/null || true)
          # Commit and push if new SBOM file is generated
          if [ -n "$sbom_file" ]; then
            git add "$sbom_file"
            git commit -m "chore(sbom): update $sbom_file [skip ci]" || echo "No changes to commit"
            git push origin "${CIRCLE_BRANCH}" || echo "Git push failed"
          else
            echo "No new SBOM file found after generation"
          fi
        else
          echo "No matching sbom-<version>.csv found. Skipping SBOM generation."
        fi
  - run:
      name: Generate changelog and bump package version
      command: npm run release -- --no-verify
  - run:
      name: Push the release
      command: git push --follow-tags origin ${CIRCLE_BRANCH}
  - when:
      condition: << parameters.slack >>
      steps:
        - slack/notify:
            event: fail
            template: SLACK_TEMP_RELEASE_FAILURE
