version: 2.1
orbs:
  build: mojaloop/build@1.1.3
parameters:
  git_tag:
    type: string
    default: ""
  pull_request:
    type: string
    default: ""
  yarn_lock:
    type: string
    default: ""
  slack:
    type: string
    default: ""
  aws:
    type: string
    default: ""
  pr_title_check_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  setup_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  test_dependencies_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  test_deprecations_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  test_lint_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  test_unit_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  test_coverage_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  vulnerability_check_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  license_audit_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  build_local_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  test_integration_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  test_functional_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  license_scan_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  grype_image_scan_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  release_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  github_release_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  publish_docker_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  publish_npm_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  publish_docker_snapshot_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  publish_npm_snapshot_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  publish_npm_prerelease_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
  publish_docker_prerelease_resource_class:
    type: enum
    enum: ["small", "medium", "medium+", "large", "xlarge", "2xlarge", "2xlarge+"]
    default: medium
workflows:
  checks:
    when: << pipeline.parameters.pull_request >>
    jobs:
      - build/pr_title_check:
          name: PR title
          resource_class: << pipeline.parameters.pr_title_check_resource_class >>
          filters:
            branches:
              ignore:
                - main
                - master
  build_and_test:
    jobs:
      - build/setup:
          name: Setup
          resource_class: << pipeline.parameters.setup_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          filters: &setup-filter
            branches:
              ignore:
                - /feature*/
                - /bugfix*/
            tags: &setup-tags
              only: /v\d+(\.\d+){2}(-[a-zA-Z-][0-9a-zA-Z-]*\.\d+)?/
      - build/test_dependencies:
          name: Dependencies
          resource_class: << pipeline.parameters.test_dependencies_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          filters:
            branches:
              ignore:
                - main
                - master
          requires:
            - Setup
      - build/test_deprecations:
          name: Deprecations
          resource_class: << pipeline.parameters.test_deprecations_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          filters: *setup-filter
          requires:
            - Setup
      - build/test_lint: &test-condition
          name: Lint
          resource_class: << pipeline.parameters.test_lint_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          filters: *setup-filter
          requires:
            - Setup
      - build/test_unit:
          <<: *test-condition
          name: Unit tests
          resource_class: << pipeline.parameters.test_unit_resource_class >>
      - build/test_coverage:
          <<: *test-condition
          name: Coverage
          aws: << pipeline.parameters.aws >>
          resource_class: << pipeline.parameters.test_coverage_resource_class >>
      - build/vulnerability_check:
          <<: *test-condition
          name: Vulnerability check
          resource_class: << pipeline.parameters.vulnerability_check_resource_class >>
      - build/audit_licenses:
          <<: *test-condition
          name: License audit
          resource_class: << pipeline.parameters.license_audit_resource_class >>
      - build/build_local:
          <<: *test-condition
          name: Build
          resource_class: << pipeline.parameters.build_local_resource_class >>
          context: org-global
      - build/test_integration: &test-docker
          name: Integration tests
          resource_class: << pipeline.parameters.test_integration_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          filters: *setup-filter
          requires:
            - Build
      - build/test_functional:
          <<: *test-docker
          name: Functional tests
          resource_class: << pipeline.parameters.test_functional_resource_class >>
      - build/license_scan:
          name: License scan
          resource_class: << pipeline.parameters.license_scan_resource_class >>
          context: org-global
          filters:
            branches:
              ignore:
                - /.*/
            tags: *setup-tags
          requires:
            - Build
      - build/grype_scan:
          name: Grype scan
          resource_class: << pipeline.parameters.grype_image_scan_resource_class >>
          context: org-global
          filters:
            branches:
              only: /.*/
            tags: *setup-tags
          requires:
            - Build
      - build/release:
          name: Release
          resource_class: << pipeline.parameters.release_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          slack: << pipeline.parameters.slack >>
          context: org-global
          filters: &release
            branches:
              only:
                - main
                - master
                - /release\/v.*/
          requires: &tests
            - Lint
            - Unit tests
            - Integration tests
            - Functional tests
            - Coverage
            - Vulnerability check
            - License audit
            - License scan
            - Grype scan
      - build/github_release:
          name: GitHub release
          resource_class: << pipeline.parameters.github_release_resource_class >>
          slack: << pipeline.parameters.slack >>
          context: org-global
          filters: *release
          requires:
            - Release
      - build/publish_docker: &publish-job
          name: Docker release
          resource_class: << pipeline.parameters.publish_docker_resource_class >>
          slack: << pipeline.parameters.slack >>
          context: org-global
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /v\d+(\.\d+){2}/
          requires: *tests
      - build/publish_npm:
          <<: *publish-job
          name: NPM release
          resource_class: << pipeline.parameters.publish_npm_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          slack: << pipeline.parameters.slack >>
      - build/publish_docker_snapshot: &publish-snapshot-job
          name: Docker snapshot
          resource_class: << pipeline.parameters.publish_docker_snapshot_resource_class >>
          slack: << pipeline.parameters.slack >>
          context: org-global
          filters:
            branches:
              ignore:
                - /.*/
            tags:
              only: /v\d+(\.\d+){2}-(snapshot|hotfix|perf)\.\d+/
          requires: *tests
      - build/publish_npm_snapshot:
          <<: *publish-snapshot-job
          name: NPM snapshot
          resource_class: << pipeline.parameters.publish_npm_snapshot_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          slack: << pipeline.parameters.slack >>
      - build/publish_npm_prerelease:
          name: NPM prerelease
          resource_class: << pipeline.parameters.publish_npm_prerelease_resource_class >>
          yarn_lock: << pipeline.parameters.yarn_lock >>
          slack: << pipeline.parameters.slack >>
          context: org-global
          filters: &only-prerelease-branches
            branches:
              only:
                - /(major|minor|patch)/.*/
          requires:
            - Lint
            - Unit tests
            - Integration tests
            - Functional tests
            - License audit
            - License scan
            - Grype scan
      - build/publish_docker_prerelease:
          name: Docker prerelease
          resource_class: << pipeline.parameters.publish_docker_prerelease_resource_class >>
          slack: << pipeline.parameters.slack >>
          context: org-global
          filters: *only-prerelease-branches
          requires:
            - NPM prerelease
